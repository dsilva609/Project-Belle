@model UI.Models.CardViewModel

<h2>@Model.ViewTitle</h2>

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.ID)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ExpansionString, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Expansion, new { @id = "expansionDropDown", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Expansion, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.CardTypeString, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.CardType, new { @id = "cardTypeDropDown", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.CardType, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Action, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Action, new { htmlAttributes = new { @id = "actionField", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Action, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Range, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Range, new { htmlAttributes = new { @id = "rangeField", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Range, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.RankString, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Rank, new { @id = "rankDropDown", @class = "form-control" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.SuitString, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EnumDropDownListFor(model => model.Suit, new { @id = "suitDropDown", @class = "form-control" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ImageLocation, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.ImageLocation, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ImageLocation, "", new { @class = "text-danger" })
			</div>
		</div>
		@if (Model.ID > 0)
		{
			<div class="form-group">
				@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.IsActive)
						@Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input id="btnSubmit" type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		}
		else
		{
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input id="btnSubmit" type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		}
	</div>
}

<div>
	@Html.ActionLink("Back to List", MVC.Card.Index())
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}